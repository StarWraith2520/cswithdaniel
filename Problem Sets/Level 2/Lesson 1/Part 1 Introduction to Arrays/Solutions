Credit: Ryan Wu

1.
Original code:
int[] arr1 = new int {4, 7, 8, 6};
Int[] arr2 = {4, 7, 8, 6};
int[] arr3 = {4, 7.8, 6};
arr3 = {2, 3, 4, 6};
int[] arr4 = {4, 7.8, 6};
arr4[0] = 2;
arr4[1] = 3;
arr4[2] = 4;
arr4[3] = 6;
int[] arr5 = new int[];
arr5 = {4, 7, 8, 6}
int[] arr6 = new int[];
arr6[0] = 2;
arr6[1] = 3;
arr6[2] = 4;
arr6[3] = 6;
int[] arr0 = new int[4];
for (i = 0; i < arr0.length, i++)
{
    arr0[i] = i
}

Fixed code:
int[] arr1 = new int[] {4, 7, 8, 6}; //Need square brackets after the int
int[] arr2 = {4, 7, 8, 6}; //All primitive data types are lower case
int[] arr3 = {4, 7, 6}; //All elements in an array must be of the same type
arr3 = new int[] {2, 3, 4, 6}; //new int[] is required when not in the same statement as the array definition
int[] arr4 = {4, 7, 6};
arr4[0] = 2;
arr4[1] = 3;
arr4[2] = 4;
//arr4[3] = 6; //arr4 has a size of 3, so the final index is 2
int[] arr5; //new int[] is not valid. new int[size] or new int[] {elements} is required
arr5 = new int[] {4, 7, 8, 6};
int[] arr6 = new int[4]; //Same reason as arr5
arr6[0] = 2;
arr6[1] = 3;
arr6[2] = 4;
arr6[3] = 6;
int[] arr0 = new int[4];
for (int i = 0; i < arr0.length; i++)
{
    arr0[i] = i;
}


2.
int[] arr1 = new int[] {4, 2, 3, 6};
int[] arr2 = new int[] {3, 6, 9, 2, 4, 6, 8, 11};
for (int i = 0; i < arr1.length; i++)
{
    System.out.println(arr1[i] + arr2[i]);
}

Output:
7
8
12
8


3.
int[] arr1 = new int[] {4, 2, 3, 6};
int[] arr2 = new int[] {3, 6, 9, 2, 4, 6, 8, 11};
for (int i : arr1)
{
    System.out.print(arr2[i]);
}
System.out.println();

Output:
4928


4.
int[] arr = new int[5];
System.out.println(arr.length);
for (int i = 0; i < 4; i++)
{
    arr[i] = 2 * i;
}
for (int i : arr)
{
    System.out.println(i);
}

Output:
5
0
2
4
6
0


5.
double[] dArr1 = {5.7, 6.8, 9.2, 7.9, 5.7, 3.4};
double product = 1;
for (double e : dArr1)
{
   System.out.println(e);
   product *= e;
}
System.out.println(product); //has minor imprecision

Note: The for loop accomplishes parts b and c at the same time.


6.
int[] arr2 = new int[101];
for (int i = 0; i < arr2.length; i++)
{
   arr2[i] = i * i;
}
int sum = 0;
for (int e : arr2)
{
   sum += e;
}
System.out.println(sum);


7.
Scanner input = new Scanner(System.in);

System.out.print("Enter an integer: ");
int n = input.nextInt();
int[] arr3 = new int[n];
for (int i = 0; i < arr3.length; i++)
{
   System.out.print("Enter a value for the array: ");
   arr3[i] = input.nextInt();
}
System.out.print("Enter an index: ");
int idx = input.nextInt();
while (idx >= 0 && idx < n)
{
   System.out.println(arr3[idx]);
   System.out.print("Enter another index: ");
   idx = input.nextInt();
}

Note: Scanner needs to be imported


8.
Scanner input = new Scanner(System.in);

System.out.print("Enter an integer: ");
int n = input.nextInt();

int[] fibArr = new int[n + 1];
int fib0 = 0;
int fib1 = 1;
fibArr[0] = 0;
fibArr[1] = 1;
for (int i = 2; i< fibArr.length; i++)
{
   fibArr[i] = fib0 + fib1;
   fib0 = fib1;
   fib1 = fibArr[i];
}
for (int i = 0; i < fibArr.length; i++)
{
   System.out.println(fibArr[i]);
}

